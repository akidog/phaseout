//= require       jquery
//= require       jquery_ujs
//= require       underscore
//= require_tree ./templates

// TODO: These route methods works, but they're ugly!
function seo_action_keys_path(key){
  var path = "<%= Phaseout::Engine.routes.url_helpers.seo_action_keys_path('PHASEOUT_ACTION_KEY') %>";
  return path.replace( 'PHASEOUT_ACTION_KEY', key.replace('#', '\%23') );
}

function seo_fields_update_path(key){
  var path = "<%= Phaseout::Engine.routes.url_helpers.seo_fields_update_path('PHASEOUT_ACTION_KEY') %>";
  return path.replace( 'PHASEOUT_ACTION_KEY', key.replace('#', '\%23') );
}

function seo_fields_delete_path(key){
  var path = "<%= Phaseout::Engine.routes.url_helpers.seo_fields_delete_path('PHASEOUT_ACTION_KEY') %>";
  return path.replace( 'PHASEOUT_ACTION_KEY', key.replace('#', '\%23') );
}

function seo_action_list_path(){
  return "<%= Phaseout::Engine.routes.url_helpers.seo_action_list_path %>";
}

var PhaseoutTranslations = <%= I18n.t('seo').to_json %>;
var PhaseoutFields       = <%= Hash[ Phaseout.default_fields.map{ |field| [field, I18n.t( "seo.fields.#{field}" )] } ].to_json %>;

function click_on_action_key_handler(_action_key){
  var action_key         = _action_key;
  var action_key_html_id = [action_key['action_id'], action_key['id']].join('_');
  var item               = $('#'+action_key_html_id);
  var fields_form        = item.children('.action_key_fields');

  $('#'+action_key_html_id+' .seo_action_key_link').click((function(){
    return function(){
      fields_form.toggle();
      item.toggleClass('opened');
    };
  })());

  fields_form[0].action_key = action_key;
  fields_form.on('ajax:success', function(xhr, response_data, status){
    fields_form[0].action_key = response_data;
  });

  $('#'+action_key_html_id+'_delete').on('ajax:success', function(xhr, response_data, status){
    $('#'+action_key_html_id).remove();
    if( $('#'+action_key['action_id']+' .action_key_list li').length == 0 ){
      $('#'+action_key['action_id']).remove();
    }
  });

  $('#'+action_key_html_id+'_button').click(function(){
    var field_key = $('#'+action_key_html_id+' option:selected').attr('value');

    if( field_key == 'other' ){
      field_key = window.prompt(PhaseoutTranslations.common.add_prompt);
      if( field_key == null ){ return null; }
    }

    if( $('#'+action_key_html_id+'_'+field_key).length > 0 ){
      alert(PhaseoutTranslations.common.already_added);
    } else {
      var template_data = {
        key:        field_key,
        field:      '',
        action_key: fields_form[0].action_key
      }
      fields_form.children('.seo_form_fields_list').append( JST['phaseout/templates/action_key_field'](template_data) );
    }
  })
}

function load_action_keys(key, html_id){
  $.ajax({
    url:      seo_action_keys_path(key),
    type:     'GET',
    dataType: 'json',
    success: function(data){
      var action_keys = _.sortBy(data, function(obj){ return obj['name']; });
      $('#'+html_id+' ul').append(JST['phaseout/templates/action_key_list']({ action_keys: action_keys }));
      for( var index in action_keys ){ click_on_action_key_handler(action_keys[index]); }
    }
  });
}

function click_on_action_handler(_action){
  var action = _action;
  var header = $('#'+action['id']+'.seo_action_item');
  var list   = $('#'+action['id']+' ul.action_key_list');
  $('#'+_action['id']+' .seo_action_item_link').click((function(){
    return function(){
      if( list.fecthedData ){
        list.toggle();
        list.toggleClass('opened');
        header.toggleClass('opened');
      } else {
        header.addClass('opened');
        list.addClass('opened');
        list.show();
        list.fecthedData = true;
        load_action_keys(action['key'], action['id']);
      }
    };
  })());
}

function load_actions(){
  $.ajax({
    url:      seo_action_list_path(),
    type:     'GET',
    dataType: 'json',
    success: function(data){
      var actions = _.sortBy(data, function(obj){ return obj['name']; });
      $('.seo_action_list').append(JST['phaseout/templates/action_list']({ actions: actions }));
      for( var index in actions ){ click_on_action_handler(actions[index]); }
    }
  });

  $(document).delegate('a[data-delete-field]', 'click', function(){
    $('#' + $(this).data('delete-field')).remove();
  });
}

$(document).ready(function(){ load_actions() });
